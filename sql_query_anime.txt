USE AnimeDB;

DESCRIBE Anime;

# For each genre, list the anime that are watched by most users (select top 100),
# along with the count number of viewers, and anime's producers.
# ORDER BY most popular genre (genre that has most total audience)
DESCRIBE Watched;

WITH user_count AS (
    SELECT A.animeId, COUNT(DISTINCT  U.userId) AS num_audience
    FROM Anime A JOIN Watched W ON A.animeId = W.animeID
                 JOIN User U ON W.userid = U.userId
    GROUP BY A.animeId
),
    genre_popularity AS (
        SELECT G.genreId, G.genreName,
               A2.animeId, A2.title,
               UC.num_audience,
               DENSE_RANK() over (PARTITION BY G.genreId ORDER BY UC.num_audience DESC) AS 'popularity_rank'
        FROM  Anime A2 JOIN BelongTo B ON  A2.animeId = B.animeId
                       JOIN Genre G ON B.genreId = G.genreId
                       JOIN user_count UC ON A2.animeId = UC.animeId
    )
SELECT *
FROM genre_popularity P
NATURAL JOIN (SELECT P2.genreId, SUM(popularity_rank) AS sum_audience FROM genre_popularity P2 GROUP BY P2.genreId) AS T
WHERE P.popularity_rank <= 100
ORDER BY T.sum_audience DESC;


# For each user, identify their favorite genres
# and the most commonly viewed anime's age_rate
SELECT * FROM RegisteredUser;
SELECT * FROM Anime;

WITH TEMP_GENRE AS (
    SELECT R.userId, G.genreId, COUNT(G.genreId) AS num_genres
    FROM RegisteredUser R JOIN Watched W on R.userId = W.userid
                          JOIN Anime A on W.animeID = A.animeId
                          JOIN BelongTo B ON A.animeId = B.animeId
                          JOIN Genre G ON B.genreId = G.genreId
    GROUP BY  R.userId, G.genreId
    ORDER BY  R.userId
),
    user_favorite_genre AS(
        SELECT T.userId, R.age, T.genreId, G.genreName, T.num_genres, DENSE_RANK() over (PARTITION BY T.userId ORDER BY T.num_genres DESC) AS rank_genres
        FROM TEMP_GENRE T JOIN Genre G ON T.genreId = G.genreId
                    JOIN RegisteredUser R ON R.userId= T.userId
)
SELECT FG.userId, FG.genreName
FROM user_favorite_genre FG
WHERE FG.num_genres > 1 AND FG.rank_genres <= 1;
